-- MySQL dump 10.13  Distrib 8.0.33, for Win64 (x86_64)
--
-- Host: localhost    Database: nodelogin
-- ------------------------------------------------------
-- Server version	8.0.33

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Dumping data for table `application`
--

LOCK TABLES `application` WRITE;
/*!40000 ALTER TABLE `application` DISABLE KEYS */;
INSERT INTO `application` VALUES ('abcd','gggg',29,'2023-07-01 00:00:00','2023-08-31 00:00:00','projectManager','devTeam','devTeam','projectLead','projectLead',NULL),('app2','This is the app description for app2',213,'2022-12-23 00:00:00','2026-07-02 00:00:00','projectManager','devTeam','devTeam','projectLead','projectLead',NULL),('app3','asdfasfdsafas',303,'2022-12-23 00:00:00','2024-07-04 00:00:00','mygroup','mygroup','projectLead','mygroup','mygroup',NULL),('durian','const jwt = require(\"jsonwebtoken\");\nconst mysql = require(\"mysql\");\nconst { isValidPassword } = require(\"../utils/auth\");\nconst { config } = require(\"../utils/dbConfig\");\nconst { getRNumber, incrementRNumber } = require(\"./applicationController\");\nconst { checkUserCanPerformAction } = require(\"./authController\");\nconst {\n  TASK_STATES,\n  TASK_RANKS,\n  ACTION_PERMISSION_COLUMNS,\n} = require(\"../constants/taskState\");\nconst { createNoteString, noteStringToArr } = require(\"../utils/notes\");\nconst dayjs = require(\"dayjs\");\nconst { DATETIME_FORMAT } = require(\"../constants/timeFormat\");\nconst { generateMailOptions, transporter } = require(\"../utils/email\");\n\nconnection = mysql.createConnection(config);\n\nasync function create(req, res, next) {\n  const { taskName, taskDescription, taskPlan, appAcronym, taskNote } =\n    req.body;\n\n  const isValidPermissions = await checkUserCanPerformAction(\n    appAcronym,\n    req.user.username,\n    \"App_permit_create\"\n  );\n\n  if (!isValidPermissions) {\n    return res.send({\n      success: false,\n      message: \"You do not have permission to access this resource.\",\n    });\n  }\n\n  try {\n    const rNumber = await new Promise((resolve, reject) => {\n      let sql = \"SELECT App_rnumber FROM application WHERE App_Acronym = ?\";\n      connection.query(sql, [appAcronym], (err, result) => {\n        if (err) reject(err);\n        resolve(result[0].App_rnumber);\n      });\n    });\n\n    const taskId = appAcronym + \"_\" + rNumber;\n\n    // generate task state\n    const taskState = TASK_STATES.open;\n    // generate task creator\n    const taskCreator = req.user.username;\n    // generate task owner\n    const taskOwner = req.user.username;\n\n    const taskCreateDate = dayjs().format(DATETIME_FORMAT);\n\n    // system generated task note\n    let taskNoteString = createNoteString(\n      \"System\",\n      \"open\",\n      `${taskOwner} has created the task.`\n    );\n\n    // user generated note string\n    if (taskNote) {\n      taskNoteString += createNoteString(taskOwner, \"open\", taskNote);\n    }\n\n    const createdTask = await new Promise((resolve, reject) => {\n      const sql = `INSERT INTO task\n      (Task_id, Task_name, Task_description, Task_plan, Task_app_acronym, Task_state, Task_creator, Task_owner, Task_createDate, Task_notes)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n      connection.query(\n        sql,\n        [\n          taskId,\n          taskName,\n          taskDescription,\n          taskPlan,\n          appAcronym,\n          taskState,\n          taskCreator,\n          taskOwner,\n          taskCreateDate,\n          taskNoteString,\n        ],\n        (err, results) => {\n          if (err) reject(err);\n          resolve({\n            taskId,\n            taskName,\n            taskDescription,\n            taskPlan,\n            appAcronym,\n            taskState,\n            taskCreator,\n            taskOwner,\n            taskCreateDate,\n            taskNoteString,\n          });\n        }\n      );\n    });\n\n    const incrementedRNumber = rNumber + 1;\n\n    await new Promise((resolve, reject) => {\n      const sql = \"UPDATE application SET App_rnumber= ? WHERE App_Acronym = ?\";\n      connection.query(\n        sql,\n        [incrementedRNumber, appAcronym],\n        (err, results) => {\n          if (err) reject(err);\n          resolve(results);\n        }\n      );\n    });\n\n    res.send({\n      success: true,\n    });\n  } catch (e) {\n    res.send({ success: false, message: e });\n  }\n}\n\nasync function getTask(req, res, next) {\n  const taskId = req.params.taskId;\n\n  const sql = \"SELECT * FROM task WHERE Task_id = ?\";\n  const result = await new Promise((resolve, reject) => {\n    connection.query(sql, [taskId], (err, result) => {\n      if (err) reject(err);\n      else {\n        resolve(result);\n      }\n    });\n  });\n\n  if (result) {\n    const formattedResults = result.map((record) => {\n      let notes = noteStringToArr(record.Task_notes);\n      const newObj = { ...record, Task_notes: notes };\n      return newObj;\n    });\n\n    res.send({\n      success: true,\n      data: formattedResults,\n    });\n  }\n}\n\nasync function getTaskByApp(req, res, next) {\n  const { appAcronym } = req.body;\n\n  // const sql = \"SELECT * FROM task WHERE Task_app_acronym = ?\";\n  const sql = `SELECT * FROM task \n  LEFT JOIN plan ON task.Task_plan = plan.Plan_mvp_name \n  WHERE task.Task_app_acronym = ?`;\n\n  const result = await new Promise((resolve, reject) => {\n    connection.query(sql, [appAcronym], (err, result) => {\n      if (err) reject(err);\n      else {\n        resolve(result);\n      }\n    });\n  });\n\n  const formattedResults = result.map((record) => {\n    let notes = noteStringToArr(record.Task_notes);\n    const newObj = { ...record, Task_notes: notes };\n    return newObj;\n  });\n\n  if (result) {\n    res.send({\n      success: true,\n      data: formattedResults,\n    });\n  }\n}\n\nasync function getTaskByPlan(req, res, next) {\n  const { appAcronym, planName } = req.body;\n\n  // const sql = \"SELECT * FROM task WHERE Task_app_acronym = ? AND Task_plan = ?\";\n  const sql = `SELECT * FROM task LEFT JOIN plan ON task.Task_plan = plan.Plan_mvp_name AND task.Task_app_acronym = plan.Plan_app_acronym WHERE task.Task_app_acronym = ? AND task.Task_plan = ?`;\n\n  const result = await new Promise((resolve, reject) => {\n    connection.query(sql, [appAcronym, planName], (err, result) => {\n      if (err) reject(err);\n      else {\n        resolve(result);\n      }\n    });\n  });\n\n  const formattedResults = result.map((record) => {\n    let notes = noteStringToArr(record.Task_notes);\n    const newObj = { ...record, Task_notes: notes };\n    return newObj;\n  });\n\n  if (result) {\n    res.send({\n      success: true,\n      data: formattedResults,\n    });\n  }\n}\n\nasync function editTask(req, res, next) {\n  const { taskId, taskName, taskDescription, taskPlan, taskNote } = req.body;\n\n  // Get current task state\n  const taskObj = await new Promise((resolve, reject) => {\n    const sql = \"SELECT * FROM task WHERE Task_id=?\";\n    connection.query(sql, [taskId], (err, result) => {\n      if (err) reject(err);\n      resolve(result[0]);\n    });\n  });\n\n  const taskState = taskObj.Task_state;\n  // Get the application name\n  const appAcronym = taskObj.Task_app_acronym;\n\n  const isActionAllowed = await checkUserCanPerformAction(\n    appAcronym,\n    req.user.username,\n    ACTION_PERMISSION_COLUMNS[taskState]\n  );\n\n  if (!isActionAllowed) {\n    return res.send({\n      success: false,\n      message: \"You do not have permission to access this resource\",\n    });\n  }\n\n  // System generated note string\n  let taskNoteString = createNoteString(\n    \"System\",\n    taskState,\n    `${req.user.username} has taken ownership of the task`\n  );\n\n  // User generated note string\n  if (taskNote) {\n    taskNoteString += createNoteString(req.user.username, taskState, taskNote);\n  }\n  // Update task owner, concat task note string\n\n  console.log(\"james2\", taskNote);\n  const sql =\n    \"UPDATE task SET Task_name=?, Task_description=?, Task_plan=?, Task_owner=?, Task_notes=CONCAT(Task_notes,?) WHERE Task_id=?\";\n  const result = await new Promise((resolve, reject) => {\n    connection.query(\n      sql,\n      [\n        taskName,\n        taskDescription,\n        taskPlan,\n        req.user.username,\n        taskNoteString,\n        taskId,\n      ],\n      (err, result) => {\n        if (err) reject(err);\n        if (result) {\n          resolve(result);\n        }\n      }\n    );\n  });\n  if (result) {\n    res.send({ success: true });\n  } else {\n    res.send({ success: false });\n  }\n}\n\nasync function editAndPromoteTask(req, res, next) {\n  const { taskId, taskName, taskDescription, taskPlan, taskNote } = req.body;\n\n  const taskObj = await new Promise((resolve, reject) => {\n    const sql = \"SELECT * FROM task WHERE Task_id=?\";\n    connection.query(sql, [taskId], (err, result) => {\n      if (err) reject(err);\n      if (result.length) {\n        resolve(result[0]);\n      }\n    });\n  });\n\n  const taskState = taskObj.Task_state;\n  const newTaskState = TASK_RANKS[taskObj.Task_state].promoted;\n  const appAcronym = taskObj.Task_app_acronym;\n\n  const isActionAllowed = await checkUserCanPerformAction(\n    appAcronym,\n    req.user.username,\n    ACTION_PERMISSION_COLUMNS[taskState]\n  );\n\n  if (!isActionAllowed) {\n    return res.send({\n      success: false,\n      message: \"You do not have permission to access this resource\",\n    });\n  }\n\n  // System generated note string\n  let taskNoteString = createNoteString(\n    \"System\",\n    newTaskState,\n    `${req.user.username} has promoted the task to ${newTaskState}`\n  );\n\n  // User generated note string\n  if (taskNote) {\n    taskNoteString += createNoteString(\n      req.user.username,\n      newTaskState,\n      taskNote\n    );\n  }\n  if (!newTaskState) {\n    res.send({\n      success: false,\n      message: \"Unable to promote this task further.\",\n    });\n  }\n\n  const sql =\n    \"UPDATE task SET Task_name=?, Task_description=?, Task_plan=?, Task_owner=?, Task_state=?, Task_notes=CONCAT(Task_notes,?) WHERE Task_id=?\";\n  const result = await new Promise((resolve, reject) => {\n    connection.query(\n      sql,\n      [\n        taskName,\n        taskDescription,\n        taskPlan,\n        req.user.username,\n        newTaskState,\n        taskNoteString,\n        taskId,\n      ],\n      (err, result) => {\n        if (err) reject(err);\n        if (result) {\n          resolve(result);\n        }\n      }\n    );\n  });\n\n  if (newTaskState === \"done\") {\n    // Get all the email receipients\n    const sql = `SELECT p.username, accounts.email \n    FROM username_usergroup_pivot AS p \n    LEFT JOIN application\n    ON p.usergroup = application.App_permit_done\n    LEFT JOIN accounts\n    ON p.username = accounts.username\n    WHERE application.App_Acronym=\'facebook\';`;\n    const emailsArr = await new Promise((resolve, reject) => {\n      connection.query(sql, [appAcronym], (err, result) => {\n        if (err) reject(err);\n        const tmp = result.map((row) => row.email);\n        const filtered = tmp.filter((name) => name !== null);\n        const string = filtered.join(\",\");\n        resolve(filtered);\n      });\n    });\n\n    sendEmailNotification(emailsArr, taskId);\n  }\n\n  if (result) {\n    res.send({ success: true });\n  } else {\n    res.send({ success: false });\n  }\n}\n\nasync function editAndDemoteTask(req, res, next) {\n  const { taskId, taskName, taskDescription, taskPlan, taskNote } = req.body;\n\n  const taskObj = await new Promise((resolve, reject) => {\n    const sql = \"SELECT * FROM task WHERE Task_id=?\";\n    connection.query(sql, [taskId], (err, result) => {\n      if (err) reject(err);\n      if (result.length) {\n        resolve(result[0]);\n      }\n    });\n  });\n\n  const taskState = taskObj.Task_state;\n  const appAcronym = taskObj.Task_app_acronym;\n  const newTaskState = TASK_RANKS[taskObj.Task_state].demoted;\n\n  const isActionAllowed = await checkUserCanPerformAction(\n    appAcronym,\n    req.user.username,\n    ACTION_PERMISSION_COLUMNS[taskState]\n  );\n\n  if (!isActionAllowed) {\n    return res.send({\n      success: false,\n      message: \"You do not have permission to access this resource\",\n    });\n  }\n\n  // System generated note string\n  let taskNoteString = createNoteString(\n    \"System\",\n    newTaskState,\n    `${req.user.username} has demoted the task to ${newTaskState}`\n  );\n\n  console.log(\"james1\", taskNoteString);\n  // User generated note string\n  if (taskNote) {\n    taskNoteString += createNoteString(\n      req.user.username,\n      newTaskState,\n      taskNote\n    );\n  }\n\n  console.log(\"james2\", taskNoteString);\n\n  if (!newTaskState) {\n    return res.send({\n      success: false,\n      message: \"Unable to demote this task further.\",\n    });\n  }\n\n  const sql =\n    \"UPDATE task SET Task_name=?, Task_description=?, Task_plan=?, Task_owner=?, Task_state=?, Task_notes=CONCAT(Task_notes,?) WHERE Task_id=?\";\n  const result = await new Promise((resolve, reject) => {\n    connection.query(\n      sql,\n      [\n        taskName,\n        taskDescription,\n        taskPlan,\n        req.user.username,\n        newTaskState,\n        taskNoteString,\n        taskId,\n      ],\n      (err, result) => {\n        if (err) reject(err);\n        if (result) {\n          resolve(result);\n        }\n      }\n    );\n  });\n  if (result) {\n    res.send({ success: true });\n  } else {\n    res.send({ success: false });\n  }\n}\n\nasync function sendEmailNotification(emailString, taskId) {\n  const mailOptions = generateMailOptions(emailString, taskId);\n\n  const result = await new Promise((resolve, reject) => {\n    transporter.sendMail(mailOptions, (err, info) => {\n      if (err) reject(err);\n      if (info) resolve(info);\n    });\n  });\n\n  console.log(\"Send email result\", result);\n\n  return result;\n}\n\nmodule.exports = {\n  create,\n  getTaskByApp,\n  getTaskByPlan,\n  getTask,\n  editTask,\n  editAndPromoteTask,\n  editAndDemoteTask,\n};\n',12,'2023-07-01 00:00:00','2023-08-31 00:00:00','projectManager','devops','devops','projectLead','projectLead',NULL),('facebook','This is a social media app!',45,'2023-07-06 00:00:00','2027-07-01 00:00:00','projectManager','devTeam','devTeam','projectLead','projectLead',NULL),('James1025','This is not very important app',101,'2023-07-13 00:00:00','2023-08-14 00:00:00','sqa','projectLead','projectManager','user','sqa',NULL),('NormalApp','Normal app desc',109,'2023-07-01 00:00:00','2023-07-26 00:00:00','devTeam','group1','group2','mygroup','devops',NULL),('test LOng Text','Stack Overflow\nAbout\nProducts\nFor Teams\nSearch…\nJoin Stack Overflow to find the best answer to your technical question, help others answer theirs.\n\nHome\nPUBLIC\nQuestions\nTags\nUsers\nCompanies\nCOLLECTIVES\nExplore Collectives\nTEAMS\nStack Overflow for Teams – Start collaborating and sharing organizational knowledge. \nCSS: how to get scrollbars for div inside container of fixed height\nAsked 12 years, 6 months ago\nModified 10 months ago\nViewed 398k times\n131\n\nI have the following markup:\n\n<div class=\"FixedHeightContainer\">\n  <h2>Title</h2>\n  <div class=\"Content\">\n    ..blah blah blah...\n  </div>\n</div>\nThe CSS looks like this:\n\n.FixedHeightContainer\n{\n  float:right;\n  height: 250px;\n  width:250px;  \n}\n.Content\n{\n  ???\n}\nDue to its content, the height of div.Content is typically greater than the space provided by div.FixedHeightContainer. At the moment, div.Content merrily extends out of the bottom of div.FixedHeightContainer - not at all what I want.\n\nHow do I specify that div.Content gets scrollbars (preferably vertical only, but I\'m not fussy) when its height is too great to fit?\n\noverflow:auto and overflow:scroll are doing nothing, for some bizarre reason.\n\ncssscrollbaroverflow\nShare\nImprove this question\nFollow\nasked Jan 10, 2011 at 12:15\nDavid\'s user avatar\nDavid\n15.7k2222 gold badges8989 silver badges150150 bronze badges\nAdd a comment\n6 Answers\nSorted by:\n\nHighest score (default)\n203\n\nsetting the overflow should take care of it, but you need to set the height of Content also. If the height attribute is not set, the div will grow vertically as tall as it needs to, and scrollbars wont be needed.\n\nSee Example: http://jsfiddle.net/ftkbL/1/\n\nShare\nImprove this answer\nFollow\nanswered Jan 10, 2011 at 12:18\nDutchie432\'s user avatar\nDutchie432\n28.7k2020 gold badges9292 silver badges109109 bronze badges\nOkay - thanks. So I need to specify a height for div.Content? I assumed it would work out from the container that it wouldn\'t fit, and apply scrollbars on that basis. – \nDavid\n Jan 10, 2011 at 12:37\n10\nIf you give Content a fixed height, you shouldn\'t give FixedHeightContainer a fixed height, because you can\'t know how high your title will be, so Content may be pushed out. See: jsfiddle.net/ftkbL/2 You should set the fixed height only on the element with overflow: scroll. See jsfiddle.net/ftkbL/3 or jsfiddle.net/ftkbL/4 – \nRoToRa\n Jan 10, 2011 at 13:31 \nI see your point (from the first link) but the title text is known and is too short to break over a line unless the user inflated the text to an impractical size. – \nDavid\n Jan 10, 2011 at 14:14 \nIs there a way to have a short height and hide the scroll-bar at the same time? this way when users drag down on mobile devices, they will see that they are scrolling down, but without the cumbersome of seeing 2 scroll-bars on their browser? – \nklewis\n May 16, 2014 at 13:15\n@blackhawk - Not that I know of. You may need to use Javascript for this. Specifically I am thinking of the jQuery Draggable library: jqueryui.com/draggable -one thing to consider is... how will desktop users know to scroll? – \nDutchie432\n May 18, 2014 at 13:21 \nShow 3 more comments\n9\n\nFWIW, here is my approach = a simple one that works for me:\n\n<div id=\"outerDivWrapper\">\n   <div id=\"outerDiv\">\n      <div id=\"scrollableContent\">\nblah blah blah\n      </div>\n   </div>\n</div>\n\nhtml, body {\n   height: 100%;\n   margin: 0em;\n}\n\n#outerDivWrapper, #outerDiv {\n   height: 100%;\n   margin: 0em;\n}\n\n#scrollableContent {\n   height: 100%;\n   margin: 0em;\n   overflow-y: auto;\n}\nShare\nImprove this answer\nFollow\nanswered Sep 24, 2019 at 18:34\nJohn Love\'s user avatar\nJohn Love\n9111 silver badge11 bronze badge\nAdd a comment\n4\n\nThis is a great question because the answer is not immediately obvious, for such a simple task. The problem has hit me several times over the years, and It seems I always have to think about it before I get it right.\n\nBelow is my solution which uses (only) two CSS-classes, \'innerDiv\' and \'outerDiv\'.\n\n<div id=\"outerDiv\">\n  <div id=\"innerDiv\">\n     A <p> B <p> C <p> D <p>\n  </div>\n</div>\n\n<style>\n    #outerDiv\n    { height : 200px;\n      margin : 44px; border: solid 4px Red;\n    }\n\n    #innerDiv\n    { height     : 80%;\n      overflow-y : auto;\n      border     : solid 4px Green; font-size: 300%;\n    }\n</style>\nWhy does that work, and why do I say the answer is \"not immediately obvious\"?\n\nIn the example above both the outerDiv and innerDiv have fixed height because we set the height: -property for both of them.\n\nWe have the innerDiv height less than the height of the outerDiv. Therefore innerDiv \"fits\" into the outer-div and therefore the outer div should not get a scrollbar, right? Yes except if the innerDiv has so much content that it does not fit into the fixed height of the innerDiv but overflows. Therefore the question is how can we prevent the inner div from \"overflowing\"?\n\nThe way to prevent the innerDiv from overflowing is to give it the attribute \"overflow: auto\", or \"overflow-y: auto\" if we just want to prevent vertical overflow.\n\nThe reason the solution is \"not immediately obvious\" is this: The default value of \'overflow\' is NOT \'auto\', but \'visible\'.\n\nOne might (erroneously) assume that the default value of overflow is \"auto\", because then everything should be auto-matically taken care of, right? Not so fast, the default of overflow is \'visible\', NOT \'auto\'.\n\nSo if you remove the \"overflow-y:auto\" from the example above there will be no scrollbars. If you remove it but add it to the outerDiv, the outer div will have the scrollbar, which is NOT what we want. If you have it in both then only innerDiv will have it.\n\nShare\nImprove this answer\nFollow\nedited Jan 30, 2022 at 18:28\nanswered Jan 30, 2022 at 18:12\nPanu Logic\'s user avatar\nPanu Logic\n2,14511 gold badge1717 silver badges2121 bronze badges\nAdd a comment\n3\n\nCode from the above answer by Dutchie432\n\n.FixedHeightContainer {\n    float:right;\n    height: 250px;\n    width:250px; \n    padding:3px; \n    background:#f00;\n}\n\n.Content {\n    height:224px;\n    overflow:auto;\n    background:#fff;\n}\nShare\nImprove this answer\nFollow\nedited Apr 26, 2019 at 3:16\nS. Esteves\'s user avatar\nS. Esteves\n41544 silver badges1414 bronze badges\nanswered Jun 18, 2018 at 6:07\nCharitha Goonewardena\'s user avatar\nCharitha Goonewardena\n4,34322 gold badges3535 silver badges3737 bronze badges\nAdd a comment\n0\n\nHTML\n\n<div class=\"FixedHeightContainer\">\n  <h2>Title</h2>\n  <div class=\"Content\">\n    ..blah blah blah...\n  </div>\n</div>\nCSS\n\n.FixedHeightContainer\n{\n  float:right;\n  height: 250px;\n  width:250px;  \n  overflow-y: scroll;\n}\n\n/*SCROLLBAR MODIFICATIONS*/\n\n.FixedHeightContainer::-webkit-scrollbar {\n    width: 8px;\n}\n\n.FixedHeightContainer::-webkit-scrollbar-thumb {\n    background: #909090;\n    border-radius: 8px;\n}\n.FixedHeightContainer::-webkit-scrollbar-track {\n    background: #FFFFFF;\n}\nShare\nImprove this answer\nFollow\nanswered Jun 23, 2021 at 16:11\nKashif Iftikhar\'s user avatar\nKashif Iftikhar\n28411 gold badge99 silver badges2828 bronze badges\nAdd a comment\n0\n\n1)Set the height and width of div.Content smaller or equal as per design(preferably smaller). You may use px or pcnt as unit.\n2)Now bring overflow-y property and set the value auto.\n\nCSS:\n\n<style>\n        .FixedHeightContainer \n        {\n            float:  right;\n            height: 250px;\n            width:  250px;\n            border: 1px solid red; \n        }\n        .Content\n        {\n            height: 65%;\n            width:  95%;\n            overflow-y: auto;\n            border: 1px solid red; \n        }\n    </style>\nHTML:\n\n<div class=\"FixedHeightContainer\">\n  <h2>Title</h2>\n  <div class=\"Content\">\n    Any length/size of content.\n  </div>\n</div>\nShare\nImprove this answer\nFollow\nanswered Aug 22, 2022 at 13:14\nuser19759953\'s user avatar\nuser19759953\n1\nAdd a comment\nYour Answer\nSign up or log in\nPost as a guest\nName\nEmail\nRequired, but never shown\n\nBy clicking “Post Your Answer”, you agree to our terms of service and acknowledge that you have read and understand our privacy policy and code of conduct.\n\nNot the answer you\'re looking for? Browse other questions tagged cssscrollbaroverflow or ask your own question.\nThe Overflow Blog\nThe Overflow #186: Do large language models know what they’re talking about?\nHow ICs can get recognition for their work on big projects (Ep. 590)\nFeatured on Meta\nColors update: A more detailed look\nStack Overflow at WeAreDevelopers World Congress in Berlin\nLaunching 2 new collectives: PHP and NLP\nConclusions from title-drafting and question-content assistance experiments...\nTemporary policy: Generative AI (e.g., ChatGPT) is banned\n\nReport this ad\nLinked\n64\nScroll part of content in fixed position container\n2\nHow to set size of div containing text so that can use the scroll bar feature\n1\nDynamic table not displayed\n-2\nHTML box with inside a list of element\nRelated\n3\nHow to make a div to show scrollbars (without fixed height)?\n3\nCSS - Show only Horizontal Scroll bar for a fixed width and height div\n9\ndivs with scrollbars in div with fixed size\n1\nHow to put DIV scrollbar inside fixed width DIV (overflow:auto, float:left)\n0\nAdd a scrollbar to the inner div (nestd divs)\n0\nScrollbar in DIV\n1\nCSS: Scroll bars on container div when child overflows\n1\nCSS: Scroll in fixed div-Container\n1\nDisplay scrollbars for overflown content only on parent container\n0\nControl scrollbar placement with overflowing content in a div inside a fixed container\nHot Network Questions\nChamber of Reflection\nRe-entry and exit crossed out stamps\nWhy does this journey to the moon take so long?\nFind out all the different files from two different paths efficiently in Windows (with Python)\nWhich snowy township mobile game with character chat bubbles is this?\nHow to make bibliography to work in subfiles of a subfile?\nIs \'by the bye\' an acceptable variant of \'by the by\'?\nHow can I manually (on paper) calculate a Bitcoin public key from a private key?\nwhat does \"the serious historian\" refer to in the following sentence?\nRedirect edge flow\nWhy can\'t capacitors on PCBs be measured with a multimeter?\nWhat is the motivation for infinity category theory?\nProblem facing when I define a new operator\nEvidence for using \"Do not show again\" on modal/popup advertisements\nWhy are we defining character groups differently for additive and multiplicative group in Tate\'s thesis?\nWhere to start with a large crack the lock puzzle like this?\nGuessing game in Python which uses a While Loop with 3 guesses\nDoes Iowa have more farmland suitable for growing corn and wheat than Canada?\nWhat happens if a professor has funding for a PhD student but the PhD student does not come?\nIs the DC of the Swarmkeeper ranger\'s Gathered Swarm feature affected by a Moon Sickle?\nWere there any planes used in WWII that were able to shoot their own tail?\nDenys Fisher, of Spirograph fame, using a computer late 1976, early 1977\nDoes the Draconic Aura feat improve by character level or class level?\n\"Intrusion countermeasures\" in VMS 4.2\n Question feed\n\nSTACK OVERFLOW\nQuestions\nHelp\nPRODUCTS\nTeams\nAdvertising\nCollectives\nTalent\nCOMPANY\nAbout\nPress\nWork Here\nLegal\nPrivacy Policy\nTerms of Service\nContact Us\nCookie Settings\nCookie Policy\nSTACK EXCHANGE NETWORK\nTechnology\nCulture & recreation\nLife & arts\nScience\nProfessional\nBusiness\nAPI\nData\nBlog\nFacebook\nTwitter\nLinkedIn\nInstagram\nSite design / logo © 2023 Stack Exchange Inc; user contributions licensed under CC BY-SA. rev 2023.7.17.43537',45,'2023-07-19 00:00:00','2023-08-31 00:00:00','projectManager','sqa','sqa','projectLead','projectLead',NULL),('testApex','const express = require(\"express\");\nconst app = express();\nconst dotenv = require(\"dotenv\");\nconst mysql = require(\"mysql\");\nconst cors = require(\"cors\");\n// const session = require(\"express-session\");\n\ndotenv.config({ path: \"./config/config.env\" });\napp.use(express.json({ limit: \"25mb\" }));\napp.use(cors());\n\n// app.use(function (req, res, next) {\n//   res.header(\"Access-Control-Allow-Origin\", \"http://localhost:3000*\");\n//   res.header(\n//     \"Access-Control-Allow-Headers\",\n//     \"Origin, X-Requested-With, Content-Type, Accept\"\n//   );\n//   next();\n// });\n\nconst authRoutes = require(\"./routes/routes\");\napp.use(authRoutes);\n\nconst PORT = process.env.PORT || 3001;\napp.listen(PORT, () => {\n  console.log(`Server started on port ${PORT}`);\n});\n',7,'2023-07-19 00:00:00','2023-08-30 00:00:00','testPm','testDevops','testDevops','projectLead','projectLead',NULL),('TestingDates','gagagaaga',1,'2023-07-01 00:00:00','2024-07-04 00:00:00','projectManager',NULL,NULL,NULL,'projectLead',NULL),('twitter','something ',12,'2023-07-20 00:00:00','2023-08-23 00:00:00','projectManager','devTeam','devTeam','projectLead','projectLead',NULL);
/*!40000 ALTER TABLE `application` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-07-20 15:21:40
